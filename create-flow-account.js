parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"LX88":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.signWithKey=exports.genKeys=void 0;var e=require("elliptic"),r=require("sha3"),t=o(require("rlp"));function n(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return n=function(){return e},e}function o(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=n();if(r&&r.has(e))return r.get(e);var t={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var u=o?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(t,i,u):t[i]=e[i]}return t.default=e,r&&r.set(e,t),t}const i=new e.ec("p256"),u=e=>t.encode([Buffer.from(e,"hex"),2,3,1e3]).toString("hex"),f=()=>{const e=i.genKeyPair(),r=e.getPrivate("hex"),t=e.getPublic("hex").replace(/^04/,"");return{publicKey:t,privateKey:r,flowKey:u(t)}};exports.genKeys=f;const c=e=>{const t=new r.SHA3(256);return t.update(Buffer.from(e,"hex")),t.digest()},s=(e,r)=>{const t=i.keyFromPrivate(Buffer.from(e,"hex")).sign(c(r)),n=t.r.toArrayLike(Buffer,"be",32),o=t.s.toArrayLike(Buffer,"be",32);return Buffer.concat([n,o]).toString("hex")};exports.signWithKey=s;
},{}],"bAZu":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CONTRACT=void 0;const e="\n  access(all) contract Noop {}\n";exports.CONTRACT=e;
},{}],"R17W":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"genKeys",{enumerable:!0,get:function(){return r.genKeys}}),exports.createFlowAccount=void 0;var e=a(require("@onflow/fcl")),t=a(require("@onflow/types")),r=require("../crypto"),n=require("./contract-noop");function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function a(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var c=n?Object.getOwnPropertyDescriptor(e,a):null;c&&(c.get||c.set)?Object.defineProperty(r,a,c):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}const c=(e,t,...r)=>{if(!e){const e=new Error(`INVARIANT ${t}`);throw e.stack=e.stack.split("\n").filter(e=>!/at invariant/.test(e)).join("\n"),console.error("\n\n---\n\n",e,"\n\n",...r,"\n\n---\n\n"),e}},i=async t=>{const{account:r}=await e.send([e.getAccount(t)]);return r},u=async(o=n.CONTRACT)=>{const a=await(0,r.genKeys)(),u=await e.send([e.transaction`
      transaction {
        let payer: AuthAccount
        prepare(payer: AuthAccount) {
          self.payer = payer
        }
        execute {
          let account = AuthAccount(payer: self.payer)
          account.addPublicKey("${e=>e.publicKey}".decodeHex())
          account.setCode("${e=>e.code}".decodeHex())
        }
      }
    `,e.proposer(authorization),e.authorizations([authorization]),e.payer(authorization),e.params([e.param(a.flowKey,t.Identity,"publicKey"),e.param(Buffer.from(o,"utf8").toString("hex"),t.Identity,"code")])]),{events:p}=await e.tx(u).onceSealed(),s=p.find(e=>"flow.AccountCreated"===e.type);c(s,"No flow.AccountCreated found",p);let d=s.data.address;d=d.replace(/^0x/,""),c(d,"an address is required");const l=(await i(d)).keys.find(e=>e.publicKey===a.publicKey);return c(l,"could not find provided public key in on-chain flow account keys"),{addr:d,publicKey:a.publicKey,privateKey:a.privateKey,keyId:l.index}};exports.createFlowAccount=u;
},{"../crypto":"LX88","./contract-noop":"bAZu"}]},{},["R17W"], null)
//# sourceMappingURL=/create-flow-account.js.map